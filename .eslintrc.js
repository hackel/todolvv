module.exports = {
    root: true,
    env: {
        browser: true,
        es2022: true,
        'vue/setup-compiler-macros': true,
    },
    extends: [
        'eslint:recommended',
        'plugin:import/recommended',
        'plugin:import/typescript',
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
        'plugin:vue/vue3-recommended',
        'prettier',
    ],
    globals: {
        route: 'readonly',
    },
    parserOptions: {
        ecmaVersion: 'latest',
        env: { es6: true },
        ecmaFeatures: {
            impliedStrict: true,
            jsx: true,
        },
        extraFileExtensions: ['.vue'],
        parser: '@typescript-eslint/parser',
        project: './tsconfig.json',
        sourceType: 'module',
    },
    plugins: ['@typescript-eslint', 'import', 'vue'],
    rules: {
        // Rules not in the recommended set that are not handled by prettier.
        curly: 'error',
        eqeqeq: ['error', 'always', { null: 'ignore' }],
        'no-alert': 'error',
        'no-console': ['error', { allow: ['warn', 'error'] }],
        'no-else-return': ['error', { allowElseIf: false }],
        'no-lonely-if': 'error',
        'no-restricted-syntax': ['error', 'SequenceExpression'],
        'no-template-curly-in-string': 'warn',
        'no-useless-return': 'error',
        quotes: ['error', 'single', { avoidEscape: true, allowTemplateLiterals: false }],
        'require-atomic-updates': 'error',

        '@typescript-eslint/no-unsafe-return': 'warn',

        // Import rules
        'import/dynamic-import-chunkname': 'warn',
        'import/extensions': ['warn', 'always', { js: 'never', ts: 'never' }],
        'import/first': 'error',
        'import/newline-after-import': 'warn',
        'import/no-absolute-path': 'error',
        'import/no-deprecated': 'warn',
        'import/no-dynamic-require': 'error',
        'import/no-extraneous-dependencies': [
            'error',
            { devDependencies: ['./tests/**/*.js', './cypress/**/*.js'] },
        ],
        'import/no-mutable-exports': 'error',
        'import/no-named-as-default': 'off',
        // "import/no-named-as-default-member": "off",
        'import/no-self-import': 'error',
        'import/no-unused-modules': 'warn',
        'import/no-useless-path-segments': ['error', { noUselessIndex: true }],
        'import/no-webpack-loader-syntax': 'error',
        'import/order': [
            'warn',
            {
                alphabetize: { order: 'asc', caseInsensitive: true },
                groups: [
                    ['builtin', 'external'],
                    'internal',
                    ['parent', 'sibling', 'index'],
                    'object',
                ],
                'newlines-between': 'never',
            },
        ],

        // Uncategorized Vue rules and those disabled by prettier/vue that require special configuration.
        'vue/component-api-style': 'error',
        'vue/component-name-in-template-casing': [
            'error',
            'PascalCase',
            { ignores: ['transition', 'transition-group'], registeredComponentsOnly: true },
        ],
        'vue/eqeqeq': ['error', 'always', { null: 'ignore' }],
        'vue/html-self-closing': ['error', { html: { void: 'any' } }],
        'vue/no-empty-pattern': 'error',
        'vue/no-irregular-whitespace': 'error',
        'vue/no-reserved-component-names': 'error',
        'vue/no-restricted-syntax': ['error', 'SequenceExpression'],
        'vue/no-unsupported-features': ['error', { version: '^3.2.0' }],
        'vue/require-direct-export': 'error',
        'vue/v-on-function-call': 'error',

        // Rules that are not in the recommended set or disabled by prettier:
        // 'accessor-pairs',
        // 'array-callback-return',
        // 'arrow-body-style',
        // 'block-scoped-var',
        // 'callback-return',
        // 'camelcase',
        // 'capitalized-comments',
        // 'class-methods-use-this',
        // 'complexity',
        // 'consistent-return',
        // 'consistent-this',
        // 'curly',
        // 'default-case',
        // 'dot-notation',
        // 'eqeqeq',
        // 'func-name-matching',
        // 'func-names',
        // 'func-style',
        // 'global-require',
        // 'guard-for-in',
        // 'handle-callback-err',
        // 'id-blacklist',
        // 'id-length',
        // 'id-match',
        // 'indent-legacy',
        // 'init-declarations',
        // 'line-comment-position',
        // 'lines-around-comment',
        // 'lines-around-directive',
        // 'lines-between-class-members',
        // 'max-classes-per-file',
        // 'max-depth',
        // 'max-len',
        // 'max-lines',
        // 'max-lines-per-function',
        // 'max-nested-callbacks',
        // 'max-params',
        // 'max-statements',
        // 'max-statements-per-line',
        // 'multiline-comment-style',
        // 'new-cap',
        // 'newline-after-var',
        // 'newline-before-return',
        // 'no-alert',
        // 'no-array-constructor',
        // 'no-async-promise-executor',
        // 'no-await-in-loop',
        // 'no-bitwise',
        // 'no-buffer-constructor',
        // 'no-caller',
        // 'no-catch-shadow',
        // 'no-confusing-arrow',
        // 'no-continue',
        // 'no-div-regex',
        // 'no-duplicate-imports',
        // 'no-empty-function',
        // 'no-eq-null',
        // 'no-eval',
        // 'no-extend-native',
        // 'no-extra-bind',
        // 'no-extra-label',
        // 'no-implicit-coercion',
        // 'no-implicit-globals',
        // 'no-implied-eval',
        // 'no-inline-comments',
        // 'no-invalid-this',
        // 'no-iterator',
        // 'no-labels',
        // 'no-label-var',
        // 'no-lone-blocks',
        // 'no-lonely-if',
        // 'no-loop-func',
        // 'no-magic-numbers',
        // 'no-misleading-character-class',
        // 'no-mixed-operators',
        // 'no-mixed-requires',
        // 'no-multi-assign',
        // 'no-multi-str',
        // 'no-native-reassign',
        // 'no-negated-condition',
        // 'no-negated-in-lhs',
        // 'no-nested-ternary',
        // 'no-new',
        // 'no-new-func',
        // 'no-new-object',
        // 'no-new-require',
        // 'no-new-wrappers',
        // 'no-octal-escape',
        // 'no-param-reassign',
        // 'no-path-concat',
        // 'no-plusplus',
        // 'no-process-env',
        // 'no-process-exit',
        // 'no-proto',
        // 'no-prototype-builtins',
        // 'no-restricted-globals',
        // 'no-restricted-imports',
        // 'no-restricted-modules',
        // 'no-restricted-properties',
        // 'no-restricted-syntax',
        // 'no-return-assign',
        // 'no-return-await',
        // 'no-script-url',
        // 'no-self-compare',
        // 'no-sequences',
        // 'no-shadow',
        // 'no-shadow-restricted-names',
        // 'no-spaced-func',
        // 'no-sync',
        // 'no-tabs',
        // 'no-template-curly-in-string',
        // 'no-ternary',
        // 'no-throw-literal',
        // 'no-undefined',
        // 'no-undef-init',
        // 'no-underscore-dangle',
        // 'no-unmodified-loop-condition',
        // 'no-unneeded-ternary',
        // 'no-unused-expressions',
        // 'no-use-before-define',
        // 'no-useless-call',
        // 'no-useless-catch',
        // 'no-useless-computed-key',
        // 'no-useless-concat',
        // 'no-useless-constructor',
        // 'no-useless-rename',
        // 'no-useless-return',
        // 'no-var',
        // 'no-void',
        // 'no-warning-comments',
        // 'no-with',
        // 'object-shorthand',
        // 'one-var',
        // 'operator-assignment',
        // 'padding-line-between-statements',
        // 'prefer-arrow-callback',
        // 'prefer-const',
        // 'prefer-destructuring',
        // 'prefer-named-capture-group',
        // 'prefer-numeric-literals',
        // 'prefer-object-spread',
        // 'prefer-promise-reject-errors',
        // 'prefer-reflect',
        // 'prefer-rest-params',
        // 'prefer-spread',
        // 'prefer-template',
        // 'quotes',
        // 'radix',
        // 'require-atomic-updates',
        // 'require-await',
        // 'require-jsdoc',
        // 'require-unicode-regexp',
        // 'sort-imports',
        // 'sort-keys',
        // 'sort-vars',
        // 'spaced-comment',
        // 'strict',
        // 'symbol-description',
        // 'valid-jsdoc',
        // 'vars-on-top',
        // 'yoda',
    },
    settings: {
        'import/parsers': {
            '@typescript-eslint/parser': ['.ts', '.tsx'],
        },
        'import/resolver': {
            typescript: {
                // always try to resolve types under `<root>@types` directory even it doesn't
                // contain any source code, like `@types/unist`
                alwaysTryTypes: true,
            },
        },
    },
};
